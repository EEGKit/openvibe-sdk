# Set OpenViBE specific versions.
function(OV_SET_PROJECT_VERSION)

	set(OV_GLOBAL_VERSION_MAJOR ${PROJECT_VERSION_MAJOR} PARENT_SCOPE)
	set(OV_GLOBAL_VERSION_MINOR ${PROJECT_VERSION_MINOR} PARENT_SCOPE)
	set(OV_GLOBAL_VERSION_PATCH ${PROJECT_VERSION_PATCH} PARENT_SCOPE)
	set(OV_GLOBAL_VERSION_BUILD ${PROJECT_VERSION_BUILD} PARENT_SCOPE)
	set(OV_GLOBAL_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}.${PROJECT_VERSION_BUILD} PARENT_SCOPE)

	# codename = the name of the current branch
	execute_process(COMMAND git rev-parse --abbrev-ref HEAD
		WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
		OUTPUT_VARIABLE  PROJECT_BRANCH_STRING)
	# command output may contain carriage return
	string(STRIP ${PROJECT_BRANCH_STRING} PROJECT_BRANCH_STRING)
	set(OV_PROJECT_BRANCH ${PROJECT_BRANCH_STRING} PARENT_SCOPE)

	# commithash = short hash of latest revision
	execute_process(COMMAND git rev-parse --short HEAD
		WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
		OUTPUT_VARIABLE  PROJECT_COMMITHASH_STRING)
	# command output may contain carriage return
	string(STRIP ${PROJECT_COMMITHASH_STRING} PROJECT_COMMITHASH_STRING)
	set(OV_PROJECT_COMMITHASH ${PROJECT_COMMITHASH_STRING} PARENT_SCOPE)
	
	# Write version to .install file
	string(TIMESTAMP BUILD_DATE "%d/%m/%y %H:%M:%S")
	set(INSTALL_MANIFEST_STR "[Package]=${PROJECT_NAME}\
\n[Version]=${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}.${PROJECT_VERSION_BUILD}\
\n[BuildHash]=${PROJECT_COMMITHASH_STRING}\
\n[BuildBranch]=${PROJECT_BRANCH_STRING}\
\n[BuildDate]=${BUILD_DATE}"
		)
	file(WRITE ${CMAKE_BINARY_DIR}/.install "${INSTALL_MANIFEST_STR}")

endfunction()

