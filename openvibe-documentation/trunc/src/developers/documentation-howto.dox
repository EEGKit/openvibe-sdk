/*
 * \page Doc_DocumentationHowTo Writing documentation for OpenViBE
 *
 * The goal of this page is to propose a way to produce OpenViBE documentation for developers.
 *
 * \section Doc_DocumentationHowTo_Developers Writing documentation for developers
 * TODO
 * \subsection Doc_DocumentationHowTo_Developers_API Writing API documentation
 * TODO
 * \subsection Doc_DocumentationHowTo_Developers_Applications Writing application documentation
 * TODO
 * \subsection Doc_DocumentationHowTo_Developers_Kernel Writing kernel documentation
 * TODO
 * \subsection Doc_DocumentationHowTo_Developers_Algorithms Writing algorithm documentation
 * TODO
 * \subsection Doc_DocumentationHowTo_Developers_BoxAlgorithms Writing box-algorithm documentation
 * TODO
 * \section Doc_DocumentationHowTo_Users Writing documentation for users
 * TODO
 * \subsection Doc_DocumentationHowTo_Users_Applications Writing application documentation
 * TODO
 */

/**
 * \page Doc_DocumentationHowTo_Users_BoxAlgorithms Writing box-algorithm documentation
 * \section Doc_DocumentationHowTo_Users_BoxAlgorithms_Introductrion Introduction
 *
 * Any box algorithm that gets added to the platform should come with its associated documentation.
 * In order to make things more readable, a documentation template was defined which all box 
 * algorithm documentation files should follow. Writing box algorithm documentation thus consists in following this template and customizing
 * it with box specific information such as its name, role, behaviour and so on.
 *
 * Beside being a very repetitive task, writing documentation can become extremely time-consuming
 * when it comes to maintaining it as the number of box algorithms keeps growing. To make things easier
 * and faster, we propose to generate some parts of the documentation, leaving it up to developers
 * to write those parts of the documentation that are box-specific. Writing documentation this way guarantees that all
 * pages will all have the same aspect and structure, making it easier to navigate through them.
 *
 * The \ref Doc_Application_PluginInspector "plugin inspector" application is responsible for the generation
 * of several documentation elements for each box algorithm. For example,
 * it is able to generate an up to date snapshot of each box, as it would appear in the \ref Doc_Appliction_Designer Designer. 
 * It can also generate the template documentation for each box as a "skeleton" file. This skeleton
 * contains several tags which act as placeholders, indicating where human-written documentation should be inserted. 
 * Of course, skeleton files should never be modified by hand, but instead they may be regenerated by the plugin inspector if needed.
 * As for human written documentation, it should be written in external files and use the same tags as the skeleton file to
 * identify its different sections.
 *
 * By following this procedure, it is possible for CMake to produce a complete documentation source file from the skeleton file and 
 * the human-written file. Pieces of human-written documentation can be inserted at the correct location in the skeleton file, 
 * based on tags found in both files. Doxygen then parses this source to produce the final HTML page.
 *
 * \image html documentation-howto.png "Production pipeline of box algorithm user documentation"
 *
 * Human-written documentation files should have the extension \e .dox-part to be considered as
 * candidates by CMake for filling skeleton files. Skeleton files should have the extension
 * \e .dox-skeleton .
 *
 * As stated before, human-written documentation should make use of tags for CMake to know where
 * to insert individual pieces of documentation in the skeleton. These tags look like the following :
 * \c |OVP_DocBegin_NameOfYourBox_NameOfThePart| and
 * \c |OVP_DocEnd_NameOfYourBox_NameOfThePart| .
 *
 * Possible documentation part names include:
 *  - \c Description A global, detailed description of the box algorithm.
 *  - \c Inputs A global introduction to box inputs.
 *  - \c Input\e 1 - \c Input\e n : Description of each input of the box algorithm.
 *  - \c Outputs A global introduction to box outputs.
 *  - \c Output\e 1 - \c Output\e n : Description of each output.
 *  - \c Settings A global introduction to box settings.
 *  - \c Setting\e 1 - \c Setting\e n : Description of each setting.
 *  - \c Examples In this section some typical uses of the box may be mentioned, and/or some sample scenarios/tutorials making use of this box
 * may be detailed.
 *  - \c Miscellaneous Any additional information about this box may be mentioned here, including known bugs, performance issues, related boxes, etc.
 *
 * Now you are ready to write your own box algorithm user documentation.
 *
 * \section Doc_DocumentationHowTo_Users_BoxAlgorithms_Example Example
 *
 * As an example, one can look at the documentation of the \ref Doc_BoxAlgorithm_BrainampFileReader .
 *
 * \subsection Doc_DocumentationHowTo_Users_BoxAlgorithms_Example_DoxSekeleton 1. The .dox-skeleton file
 *
 * The \c .dox-sekeleton file generated by the \e plugin-inspector for this box algorithm looks like this :
 *
 * \verbatim

 * \page Doc_BoxAlgorithm_BrainampFileReader Brainamp file reader
 * \section Doc_BoxAlgorithm_BrainampFileReader_Summary Summary
 * \image html Doc_BoxAlgorithm_BrainampFileReader.png
 *
 * - Plugin name : Brainamp file reader
 * - Version : 1.0
 * - Author : Yann Renard
 * - Compnay : INRIA/IRISA
 * - Short description : 
 * - Documentation template generation date : Oct 16 2008
 *
 * \section Doc_BoxAlgorithm_BrainampFileReader_Description Description
 * 
 *
 * @Doc_BoxAlgorithm_BrainampFileReader_Description_Content@
 *
 * \section Doc_BoxAlgorithm_BrainampFileReader_Outputs Outputs
 *
 * \subsection Doc_BoxAlgorithm_BrainampFileReader_Output_1 1. Experiment information
 * Type identifier of this output is \ref Doc_Streams_ExperimentInformation "experiment information" (0x403488e7, 0x565d70b6)
 *
 * @Doc_BoxAlgorithm_BrainampFileReader_Output1_Content@
 *
 * \subsection Doc_BoxAlgorithm_BrainampFileReader_Output_2 2. EEG stream
 * Type identifier of this output is \ref Doc_Streams_Signal "signal" (0x5ba36127, 0x195feae1)
 *
 * @Doc_BoxAlgorithm_BrainampFileReader_Output2_Content@
 *
 * \subsection Doc_BoxAlgorithm_BrainampFileReader_Output_3 3. Stimulations
 * Type identifier of this output is \ref Doc_Streams_Stimulations "stimulations" (0x6f752dd0, 0x082a321e)
 *
 * @Doc_BoxAlgorithm_BrainampFileReader_Output3_Content@
 *
 * @Doc_BoxAlgorithm_BrainampFileReader_Outputs_Content@
 * \section Doc_BoxAlgorithm_BrainampFileReader_Settings Settings
 *
 * \subsection Doc_BoxAlgorithm_BrainampFileReader_Setting_1 1. Filename (header)
 * Type identifier of this setting is \ref Doc_Types_Filename "filename" (0x330306dd, 0x74a95f98)
 *
 * Default value of this setting is 
 *
 * @Doc_BoxAlgorithm_BrainampFileReader_Setting1_Content@
 *
 * \subsection Doc_BoxAlgorithm_BrainampFileReader_Setting_2 2. Epoch size (in sec)
 * Type identifier of this setting is \ref Doc_Types_Float "float" (0x512a166f, 0x5c3ef83f)
 *
 * Default value of this setting is 0.0625
 *
 * @Doc_BoxAlgorithm_BrainampFileReader_Setting2_Content@
 *
 * @Doc_BoxAlgorithm_BrainampFileReader_Settings_Content@
 *
 * \section Doc_BoxAlgorithm_BrainampFileReader_Examples Examples
 * @Doc_BoxAlgorithm_BrainampFileReader_Examples_Content@
 *
 *  \section Doc_BoxAlgorithm_BrainampFileReader_Miscellaneous Miscellaneous
 * @Doc_BoxAlgorithm_BrainampFileReader_Miscellaneous_Content@

 * \endverbatim
 *
 * As you can see, several placeholders exist in this file. They are tagged in
 * order to identify where hand written documentation parts should be inserted. Examples of such tags include :
 *  - \c \@Doc_BoxAlgorithm_BrainampFileReader_Description_Content\@
 *  - \c \@Doc_BoxAlgorithm_BrainampFileReader_Output0_Content\@
 *  - etc...
 *
 * \subsection Doc_DocumentationHowTo_Users_BoxAlgorithms_Example_DoxPart 2. The .dox-part file
 *
 * Documenting this box for its potential users and from a developer point of view 
 * consists in creating a \c .dox-part file with different tagged sections.
 * Tags should follow the following structure :
 * \c |OVP_DocBegin_NameOfYourBox_NameOfThePart| and
 * \c |OVP_DocEnd_NameOfYourBox_NameOfThePart| tags, where NameOfThePart should be replaced
 * with the appropriate token depending on what aspect of the box is being documented.
 *
 * A typical tagged \c .dox-part file would look like the following :
 *
 * \verbatim

 * All text lying outside of tag pairs will be ignored by CMake
__________________________________________________________________

Detailed box algorithm description
__________________________________________________________________

 * |OVP_DocBegin_BoxAlgorithm_BrainampFileReader_Description|
 * some details about the brainamp file reader
 * |OVP_DocEnd_BoxAlgorithm_BrainampFileReader_Description|
__________________________________________________________________

Outputs description
__________________________________________________________________

 * |OVP_DocBegin_BoxAlgorithm_BrainampFileReader_Outputs|
 * some general purpose details about the outputs
 * |OVP_DocEnd_BoxAlgorithm_BrainampFileReader_Outputs|
 *
 * |OVP_DocBegin_BoxAlgorithm_BrainampFileReader_Output1|
 * some details about output 1
 * |OVP_DocEnd_BoxAlgorithm_BrainampFileReader_Output1|
 *
 * |OVP_DocBegin_BoxAlgorithm_BrainampFileReader_Output2|
 * some details about output 2
 * |OVP_DocEnd_BoxAlgorithm_BrainampFileReader_Output2|
 *
 * |OVP_DocBegin_BoxAlgorithm_BrainampFileReader_Output3|
 * some details about output 3
 * |OVP_DocEnd_BoxAlgorithm_BrainampFileReader_Output3|
__________________________________________________________________

Settings description
__________________________________________________________________

 * |OVP_DocBegin_BoxAlgorithm_BrainampFileReader_Settings|
 * some general purpose details about the settings
 * |OVP_DocEnd_BoxAlgorithm_BrainampFileReader_Settings|
 *
 * |OVP_DocBegin_BoxAlgorithm_BrainampFileReader_Setting1|
 * some details about setting 1
 * |OVP_DocEnd_BoxAlgorithm_BrainampFileReader_Setting1|
 *
 * |OVP_DocBegin_BoxAlgorithm_BrainampFileReader_Setting2|
 * some details about setting 2
 * |OVP_DocEnd_BoxAlgorithm_BrainampFileReader_Setting2|
__________________________________________________________________

Examples description
__________________________________________________________________

 * |OVP_DocBegin_BoxAlgorithm_BrainampFileReader_Examples|
 * some examples on how to use this box
 * |OVP_DocEnd_BoxAlgorithm_BrainampFileReader_Examples|
__________________________________________________________________

Miscellaneous description
__________________________________________________________________

 * |OVP_DocBegin_BoxAlgorithm_BrainampFileReader_Miscellaneous|
 * additional information such as known issues,
 * references to other boxes, etc
 * |OVP_DocEnd_BoxAlgorithm_BrainampFileReader_Miscellaneous|

 * \endverbatim
 *
 * Given this \c .dox-part file, CMake is able to produce the final
 * Doxygen source file, inserting each tagged part in the \c .dox-skeleton file.
 *
 * \subsection Doc_DocumentationHowTo_Users_BoxAlgorithms_Example_FinalDox 3. The final documentation source
 *
 * Given the two previous files, CMake will be able to generate the
 * final documentation source, replacing \c \\@\\@ delimited tokens with their
 * respective human-written documentation parts.
 *
 * The final file would look like the following :
 *
 * \verbatim

 * \page Doc_BoxAlgorithm_BrainampFileReader Brainamp file reader
 * \section Doc_BoxAlgorithm_BrainampFileReader_Summary Summary
 * \image html Doc_BoxAlgorithm_BrainampFileReader.png
 *
 * - Plugin name : Brainamp file reader
 * - Version : 1.0
 * - Author : Yann Renard
 * - Compnay : INRIA/IRISA
 * - Short description : 
 * - Documentation template generation date : Oct 16 2008
 *
 * \section Doc_BoxAlgorithm_BrainampFileReader_Description Description
 * 
 *
 * 
 *
 * some details about the brainamp file reader
 *
 * 
 *
 * \section Doc_BoxAlgorithm_BrainampFileReader_Outputs Outputs
 *
 * \subsection Doc_BoxAlgorithm_BrainampFileReader_Output_1 1. Experiment information
 * Type identifier of this output is \ref Doc_Streams_ExperimentInformation "experiment information" (0x403488e7, 0x565d70b6)
 *
 * 
 *
 * some details about output 1
 *
 * 
 *
 * \subsection Doc_BoxAlgorithm_BrainampFileReader_Output_2 2. EEG stream
 * Type identifier of this output is \ref Doc_Streams_Signal "signal" (0x5ba36127, 0x195feae1)
 *
 * 
 *
 * some details about output 2
 *
 * 
 *
 * \subsection Doc_BoxAlgorithm_BrainampFileReader_Output_3 3. Stimulations
 * Type identifier of this output is \ref Doc_Streams_Stimulations "stimulations" (0x6f752dd0, 0x082a321e)
 *
 * 
 *
 * some details about output 3
 *
 * 
 *
 * 
 *
 * some general purpose details about the outputs
 *
 * 
 * \section Doc_BoxAlgorithm_BrainampFileReader_Settings Settings
 *
 * \subsection Doc_BoxAlgorithm_BrainampFileReader_Setting_1 1. Filename (header)
 * Type identifier of this setting is \ref Doc_Types_Filename "filename" (0x330306dd, 0x74a95f98)
 *
 * Default value of this setting is 
 *
 * 
 *
 * some details about setting 1
 *
 * 
 *
 * \subsection Doc_BoxAlgorithm_BrainampFileReader_Setting_2 2. Epoch size (in sec)
 * Type identifier of this setting is \ref Doc_Types_Float "float" (0x512a166f, 0x5c3ef83f)
 *
 * Default value of this setting is 0.0625
 *
 * 
 *
 * some details about setting 2
 *
 * 
 *
 * 
 *
 * some general purpose details about the settings
 *
 * 
 *
 * \section Doc_BoxAlgorithm_BrainampFileReader_Examples Examples
 * 
 *
 * some examples on how to use this box
 *
 * 
 *
 *  \section Doc_BoxAlgorithm_BrainampFileReader_Miscellaneous Miscellaneous
 * 
 *
 * additional information such as known issues,
 * references to other boxes, etc
 *
 * \endverbatim
 *
 * Notice how only text lying within a \c |OVP_DocBegin_NameOfYourBox_NameOfThePart|
 * and \c |OVP_DocEnd_NameOfYourBox_NameOfThePart| tag pair was included in the final source file, while
 * the rest was discarded by CMake.
 *
 * The HTML page corresponding to this source can be seen on the
 * \ref Doc_BoxAlgorithm_BrainampFileReader page !
 */
