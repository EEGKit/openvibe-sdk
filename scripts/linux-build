#!/bin/bash

if [ ! -e linux-init_env_command ]; then
	echo "You have to configure your \`linux-init_env_command\` file."
	echo "\`linux-init_env_command-skeleton\` is a good file to start with..."
	exit
fi

source linux-init_env_command

for project_directory in $OpenViBE_build_order; do
	if [ -e "$project_directory/CMakeLists.txt" ]; then

		temp_sub_directory=`echo $project_directory | sed '
			s:'$OpenViBE_base'/::g
			'`
		mkdir -p "../local-tmp/$temp_sub_directory" 2> /dev/null
		pushd "../local-tmp/$temp_sub_directory" 2> /dev/null

		cmake -DCMAKE_CXX_FLAGS=-Wall -DCMAKE_BUILD_TYPE=Release -DCMAKE_MODULE_PATH="$OpenViBE_base/cmake-modules" -Wno-dev "$project_directory"
		if [ $? -eq 0 ]; then
			echo CMake has been called successfully !
		else
			exit -1
		fi;

		make $1 -j 2 # VERBOSE=1
		if [ $? -eq 0 ]; then
			echo Make has been called successfully !
		else
			exit -1
		fi;

		make OpenViBE-documentation

		popd 2> /dev/null
	fi;
done

target_dist=../dist

rm -rf $target_dist           2> /dev/null

mkdir -p $target_dist/bin     2> /dev/null
mkdir -p $target_dist/include 2> /dev/null
mkdir -p $target_dist/lib     2> /dev/null
mkdir -p $target_dist/share   2> /dev/null
mkdir -p $target_dist/tmp     2> /dev/null
mkdir -p $target_dist/log     2> /dev/null
mkdir -p $target_dist/etc     2> /dev/null
mkdir -p $target_dist/doc     2> /dev/null

for project_directory in $OpenViBE_build_order; do
	cp -rf $project_directory/bin/*     $target_dist/bin     2> /dev/null
	cp -rf $project_directory/include/* $target_dist/include 2> /dev/null
	cp -rf $project_directory/lib/*.a*  $target_dist/lib     2> /dev/null
	cp -rf $project_directory/lib/*.so* $target_dist/lib     2> /dev/null
	cp -rf $project_directory/share/*   $target_dist/share   2> /dev/null
	cp -rf $project_directory/etc/*     $target_dist/etc     2> /dev/null
	cp -rf $project_directory/doc/*     $target_dist/doc     2> /dev/null
done

