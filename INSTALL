

         *========================================*
                      |OpenViBE| |README|
         *========================================*

|Introduction|

This document explains how to build the platform from sources.

|Prerequesite.CMake|

The build system is based on CMake so you will have to have CMake installed
and configured in order to generate makefiles. CMake can be downloaded at
*http://www.cmake.org* and don't forget to set the <CMAKE_ROOT> environment
variable ! Refer to cmake website for more details on installation and
updating the <CMAKE_ROOT>.

|Prerequesite.GTK|

In order to build graphical applications, you will need to have up to date
GTK packages. The distribution is actually tested on 2.6.10. If you want to
know the current installed version of GTK, use <pkg-config> this way :
	pkg-config --modversion gtk+-2.0
The result must be 2.6.10 or higher.

|Prerequesite.OpenMASK|

In order to build the *OpenMASK* based kernel, you need to have *OpenMASK*
installed and configured. *OpenMASK* can be downloaded from
*http://www.openmask.org* . The wiki has some explanations on how *OpenMASK*
can be installed and configured... However, the way that is shown in the wiki
does not necessary fit our use (this is mainly because you don't need OpenSG),
so please, follow this instructions :

supposing you put softwares in         /local/softwares
supposing you put software sources in  /local/softwares/src
supposing you put software binaries in /local/softwares/compiled

1. go in your sofware directory and download OpenMASK from INRIA gforge :
	mkdir /local/softwares/src
	cd /local/softwares/src
	svn checkout svn://scm.gforge.inria.fr/svn/openmask/OpenMASK

2. go in the source directory and configure / build OpenMASK :
	cd OpenMASK
	mkdir /local/softwares/compiled
	./configure --disable-scen-graph --prefix=/local/softwares/compiled/openmask
	make
	make install

3. update your environment <OpenMASKDIR> variables
	in your .bashrc : OpenMASKDIR=/local/softwares/compiled/openmask
	                  export OpenMASKDIR
	in your .cshrc : export OpenMASKDIR /local/softwares/compiled/openmask
	...

you're done with OpenMASK :)

|Preparing.environment|

The build process uses lots of environement variables. The script directory
contains the necessary files in order to build the whole platform / plugins.
However, the script initializing the environement variables is missing because
it should be tuned acording each local installation and usage. The
<linux-init_env_command-skeleton> and the <win32-init_env_command-skeleton>
can be used as a basis for those files however. For linux, most users will
want to copy the <linux-init_env_command-skeleton> to <linux-init_env_command>
so they get a correct file. For windows, copying the skeleton may not be
enough because of Visual Studio paths and so on... You will have to tweak ;)

|Building.a.project|

If you want to build each project separately, you can go in there directory,
create an temporary subdirectory where the build should be done and start the
build from there. For example, building trunc of *OpenViBE* module EBML could
be done this way :

# cd $OpenViBE
# mkdir tmp-build
# cd tmp-build
# cmake ..
# make

"cmake .." creates the makefiles
"make" compiles the library itself

Compiled files can be found in $OpenViBE/bin and $OpenViBE/lib

|Building.all.projects.at.once|

If you want to build all the projects at once, you can use the <linux-build>
script or the <win32-build>. Both script call the appropriate
<init_env_command> so they have correct values. However, each project will
have its build in its own directory. The <linux-collect_build> and
<win32-collect_build> will get all the built files in the <dist> directory
that will be usable...

<linux-test> and <win32-test> will collect the build and launch most
interesting softwares for you.

congratulations, you have OpenViBE working !

|End.of.file|

 vim:tw=78:ts=8:ft=help:norl:
