#!usr/bin/env python
####################################################################
# INRIA and MENSIA TECHNOLOGIES SA, CONFIDENTIAL
#
# CertiViBE Test Software
# Copyright Inria and Mensia Technologies SA, 2015-2017
# All Rights Reserved
#
# Author
#
# NOTICE: All information contained herein is, and remains
# the property of Mensia Technologies SA and Inria.
# The intellectual and technical concepts contained
# herein are proprietary to Mensia Technologies SA and Inria,
# and are covered copyright law.
# Dissemination of this information or reproduction of this material
# is strictly forbidden unless prior written permission is obtained
# from Mensia Technologies SA and Inria.
####################################################################

import numpy as np
import pandas as pd
from csv_test import CsvLibrary
from mensiasigpro.compare import compare_two_arrays
from mensiasigpro.averaging import signal_average


class AverageLibrary(object):
    def __init__(self):
        pass

    def average_reference(self, input_signal_csv, test_name, test_temporary_dir,
                           samples_per_buffer):

        """This creates a keyword named "Average Reference"
        The goal is to compare a mean value previously computed with the mean value computed now.

        :param input_signal_csv: source signal to be averaged
        :param test_name: test name
        :param test_temporary_dir: directory with all files generated during the test
        :param samples_per_buffer: number of samples per channel in a streamed matrix
        :return: path of output csv file (averaged signal)

        :raise AssertionError: raise an exception if there is a difference between the box result and the computation result.
        This also generates an output csv file with the computation results for investigation.

        Example:

        Compare the result generated by the box signal average
        Input file: 2chan.csv
        Output file: 2chan_box_result.csv
        directory ot the output file: /home/certivibe/testoutput
        Robot framework test name:  2_channels_test

        Case 1: The box signal average computation is good, the keyword won't raise anything.
        |Average Comparison| 2chan.csv | 2_channels_test  | /home/certivibe/testoutput |

        Case 2: The box signal average computation is wrong, the keyword will raise an exception
        and create an csv file:"2_channels_test.csv" in the test temporary directory.
        |Average Comparison| 2chan.csv | 2_channels_test | /home/certivibe/testoutput |

        """

        # Create data frame
        input_data = CsvLibrary.read_openvibe_csv_file(input_signal_csv)

        channel_list = list(input_data.columns.values)

        # Provide a Data Frame with the mean value for a sample of 32 values
        computed_data = signal_average(input_data, samples_per_buffer)
        df_computed_data = pd.DataFrame(computed_data, columns=channel_list)
        path_output_reference = test_temporary_dir + test_name + '.csv'
        df_computed_data.to_csv(path_output_reference, sep=';')
        
        return path_output_reference
